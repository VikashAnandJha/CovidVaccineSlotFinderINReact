{"version":3,"sources":["components/VaccineCenterList.js","components/CovidSlotDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["todayF","moment","endOf","add","format","tomorrowF","dayAfterTomorrowF","VaccineCenterList","prop","useState","centerList","setCenterList","distData","data","useEffect","console","log","distName","distId","fetchVaccineSlots","centerListToRender","titleToRender","axios","get","then","resp","centers","catch","error","map","center","Item","Content","Header","name","Meta","address","Description","Table","celled","Row","HeaderCell","Body","Cell","sessions","slots","color","available_capacity","date","Button","as","labelPosition","basic","Icon","vaccine","min_age_limit","Label","pointing","className","align","Group","CovidSlotDashboard","itemsToRender","cityitemsToRender","stateList","setstateList","stateId","stateName","selectedState","setSelectedState","selectedDist","setSelectedDist","stateData","setSateData","distList","setDistList","today","getBeneficiariesGroupBy","topBlock","vaccination","state","value","id","title","dist","dataToRender","StatisticExampleStatisticState","Statistic","Value","total","onChange","e","target","options","selectedIndex","text","style","cursor","margin","App","role","src","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1b2bafd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport {   Item,Label,Button,Icon,Table } from 'semantic-ui-react'\r\n\r\n\r\nconst today=moment().endOf('day').add(0,'days').format('YYYY-MM-DD')\r\nconst todayF=moment().endOf('day').add(0,'days').format('DD-MM-YYYY') //f=>formatted diff\r\nconst tomorrowF=moment().endOf('day').add(1,'days').format('DD-MM-YYYY')\r\nconst dayAfterTomorrowF=moment().endOf('day').add(2,'days').format('DD-MM-YYYY')\r\n\r\n\r\nfunction VaccineCenterList(prop) {\r\n    const [centerList, setCenterList] = useState([])\r\n   \r\n\r\nconst distData=prop.data;\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"dist slot :\"+distData.distName)\r\n        if(distData.distId>0) \r\n        fetchVaccineSlots()\r\n    },[distData])\r\n\r\n    const fetchVaccineSlots=function()\r\n    {\r\n     \r\n        axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=${distData.distId}&date=${todayF}`).then(function(resp){\r\n                \r\n             \r\n            console.log(resp.data.centers)\r\n            setCenterList(resp.data.centers)\r\n                 \r\n               \r\n                \r\n            }).catch(function(error){\r\n                console.log(error)\r\n            })\r\n    \r\n    }\r\n\r\n\r\n\r\n    \r\nconsole.log(centerList)\r\n    let centerListToRender;\r\n    let todayData=\"N/A\",tomorrowData=\"N/A\",dayAfterTomorrowData;\r\n    if (centerList) {\r\n        centerListToRender = centerList.map((center) => {\r\n        return  (<>  \r\n<Item>\r\n             <Item.Content>\r\n              <Item.Header>{center.name}</Item.Header>\r\n              <Item.Meta> \r\n              {center.address}\r\n              </Item.Meta>\r\n              <Item.Description>\r\n              <Table celled>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>Today</Table.HeaderCell>\r\n        <Table.HeaderCell>Tomorrow({tomorrowF})</Table.HeaderCell> \r\n        <Table.HeaderCell>DayAfterTomorrow({dayAfterTomorrowF})</Table.HeaderCell> \r\n      </Table.Row>\r\n    </Table.Header>\r\n    \r\n    <Table.Body>\r\n    \r\n\r\n\r\n<Table.Row>\r\n        <Table.Cell> \r\n        {  \r\n        center.sessions.map((slots)=>{\r\n        let color;\r\n        if(slots.available_capacity>0) color=\"green\"; else color=\"red\"\r\n\r\nif(slots.date==todayF){\r\n    return<><Button as='div' labelPosition='right'>\r\n<Button basic color={color}>\r\n<Icon name='Available' />\r\n{slots.vaccine} {slots.min_age_limit}+\r\n</Button>\r\n<Label as='a' basic color={color} pointing='left'>\r\n{slots.available_capacity}\r\n</Label>\r\n</Button>\r\n<br></br>\r\n</>\r\n} }) } \r\n            \r\n        \r\n            </Table.Cell> \r\n            <Table.Cell> \r\n            \r\n            { center.sessions.map((slots)=>{\r\n        let color;\r\n        if(slots.available_capacity>0) color=\"green\"; else color=\"red\"\r\n \r\nif(slots.date==tomorrowF){\r\n    return<><Button as='div' labelPosition='right'>\r\n<Button basic color={color}>\r\n<Icon name='Available' />\r\n{slots.vaccine} {slots.min_age_limit}+\r\n</Button>\r\n<Label as='a' basic color={color} pointing='left'>\r\n{slots.available_capacity}\r\n</Label>\r\n</Button>\r\n<br></br>\r\n</>\r\n} }) } \r\n            \r\n            \r\n            </Table.Cell>   <Table.Cell> \r\n            \r\n            { center.sessions.map((slots)=>{\r\n        let color;\r\n        if(slots.available_capacity>0) color=\"green\"; else color=\"red\"\r\n \r\nif(slots.date==dayAfterTomorrowF){\r\n    return<><Button as='div' labelPosition='right'>\r\n<Button basic color={color}>\r\n<Icon name='Available' />\r\n{slots.vaccine} {slots.min_age_limit}+\r\n</Button>\r\n<Label as='a' basic color={color} pointing='left'>\r\n{slots.available_capacity}\r\n</Label>\r\n</Button>\r\n<br></br>\r\n</>\r\n} }) } \r\n            \r\n            \r\n            </Table.Cell>  \r\n      </Table.Row>        \r\n</Table.Body>\r\n    </Table>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item> \r\n        </>\r\n            \r\n        )\r\n      });\r\n    }else{\r\n        centerListToRender=\"N/A\"\r\n    } \r\nlet titleToRender;\r\n    if(!(prop.data.distId>0)){\r\n        centerListToRender=\"\";\r\n        titleToRender=\"\"\r\n    }else{\r\n        titleToRender=<><h1>Covid Vaccine Centers {prop.data.distName} </h1></>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ui left\">\r\n            <hr></hr>\r\n           \r\n{titleToRender}\r\n<div align=\"left\">\r\n<Item.Group >\r\n                {centerListToRender}\r\n                </Item.Group>\r\n</div>\r\n \r\n            \r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VaccineCenterList\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useEffect,useState } from 'react'\r\nimport { Statistic } from 'semantic-ui-react'\r\nimport VaccineCenterList from './VaccineCenterList'\r\n\r\nimport moment from 'moment';\r\n\r\nimport Moment from 'react-moment';\r\n  function CovidSlotDashboard() {\r\n\r\n    const [stateList,setstateList]= useState([])\r\n    const [selectedState,setSelectedState]= useState({stateId:\"\",stateName:\"All India\"})\r\n    const [selectedDist,setSelectedDist]= useState({distId:\"\",distName:\"\"})\r\n    \r\n    const [stateData,setSateData]= useState([])\r\n    const [distList,setDistList]= useState([])\r\n    const [centerList,setCenterList]= useState([])\r\n\r\n    const today=moment().endOf('day').add(0,'days').format('YYYY-MM-DD')\r\n    const tomorrow=moment().endOf('day').add(1,'days').format('YYYY-MM-DD')\r\n    const dayAfterTomorrow=moment().endOf('day').add(2,'days').format('YYYY-MM-DD')\r\n\r\n    console.log(\"today\"+today)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n           \r\naxios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=&district_id=&date=${today}`).then(function(resp){\r\n    \r\n\r\nconsole.log(resp.data.getBeneficiariesGroupBy)\r\n\r\n   setstateList(resp.data.getBeneficiariesGroupBy)\r\n    \r\n}).catch(function(error){\r\n    console.log(error)\r\n})\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n           \r\n        axios.get(`https://api.cowin.gov.in/api/v1/reports/v2/getPublicReports?state_id=${selectedState.stateId}&district_id=${selectedDist.distId}&date=${today}`).then(function(resp){\r\n            \r\n         \r\n        console.log(resp.data)\r\n        \r\n            setSateData(resp.data.topBlock.vaccination)\r\n            if(!(selectedDist.distId>0))\r\n            setDistList(resp.data.getBeneficiariesGroupBy)\r\n           \r\n            \r\n        }).catch(function(error){\r\n            console.log(error)\r\n        })\r\n\r\n        console.log(\"calling\")\r\n        \r\n        \r\n            }, [selectedState,selectedDist])\r\n\r\n\r\n       \r\n\r\n\r\n            let itemsToRender;\r\n            if (stateList) {\r\n              itemsToRender = stateList.map((state) => {\r\n                return <option value={state.id}>{state.title} </option>;\r\n              });\r\n            }else{\r\n                \r\n            } \r\n            let cityitemsToRender;\r\n            if (distList) {\r\n                cityitemsToRender = distList.map((dist) => {\r\n                return <option value={dist.id}>{dist.title} </option>;\r\n              });\r\n            }else{\r\n                \r\n            }\r\n\r\n            const getStateListChange=function(e){\r\n\r\n                setSelectedState({ \r\n                    stateName:e.target.options[e.target.selectedIndex].text,\r\n                    stateId:e.target.value\r\n                })\r\n                console.log(\"state Specefic data set\")\r\n            \r\n                // resetting the dist list\r\n\r\n                setSelectedDist({ \r\n                    distName:\"\",\r\n                    distId:\"\"\r\n                })\r\n            \r\n            } \r\n            const getDistListChange=function(e){\r\n\r\n                setSelectedDist({ \r\n                    distName:e.target.options[e.target.selectedIndex].text,\r\n                    distId:e.target.value\r\n                })\r\n                console.log(\"dist Specefic data set\")\r\n            //fetchStateData(selectedState.stateId)\r\n            \r\n            \r\n            \r\n            } \r\n\r\n\r\n           \r\n            const StatisticExampleStatisticState = () => (\r\n                <div>\r\n                     \r\n                <Statistic>\r\n                      <Statistic.Value>{stateData.today}</Statistic.Value>\r\n                      <Statistic.Label>Today Vaccinated</Statistic.Label>\r\n                    </Statistic> \r\n                    \r\n                    <Statistic>\r\n                      <Statistic.Value>{stateData.total}</Statistic.Value>\r\n                      <Statistic.Label>Total Vaccinated</Statistic.Label>\r\n                    </Statistic>\r\n                \r\n                </div>\r\n                \r\n                   \r\n                \r\n                \r\n                  )\r\n                   \r\n                  \r\n                       \r\n    \r\n  let dataToRender;\r\n    if (stateData.total) {\r\n        console.log(\"state\"+stateData)\r\n         dataToRender= <>\r\n\r\n       <br></br>\r\n       Showing Resuts for <b>{selectedState.stateName} {selectedDist.distName}</b>\r\n       <br></br>\r\n      <StatisticExampleStatisticState></StatisticExampleStatisticState>\r\n        \r\n      </>\r\n    }else{\r\n        dataToRender=\"Select the state to show its data\"\r\n    }\r\n\r\n  \r\n\r\n \r\n  \r\n\r\n    return (\r\n        <>\r\n\r\n<div>\r\n\r\nSelect Your State\r\n <select onChange={getStateListChange} style={{cursor:'pointer' }}>\r\n     <option value=\"\">All India</option>\r\n\r\n{ itemsToRender}     \r\n\r\n </select>\r\n<span style={{margin:'10px'}}></span>\r\n Select Your City\r\n <select onChange={getDistListChange} style={{cursor:'pointer' }}>\r\n     <option value=\"\">All District</option>\r\n\r\n{ cityitemsToRender}     \r\n\r\n </select>\r\n\r\n\r\n\r\n <br></br>\r\n{dataToRender}\r\n\r\n <br>\r\n </br>\r\n <VaccineCenterList data={selectedDist}></VaccineCenterList>\r\n \r\n             \r\n\r\n            \r\n</div>\r\n\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default CovidSlotDashboard\r\n","import React, {useState,useEffect} from 'react'  \nimport './App.css';\nimport CovidSlotDashboard from './components/CovidSlotDashboard'; \nimport 'semantic-ui-css/semantic.min.css'\n\n \n \n\nfunction App() {\n   \n\n  \n   \n  \n\n  return (\n    <div className=\"App\">\n       <main role=\"main\" className=\"container\">\n<img src=\"img/logo.png\" style={{maxWidth:\"220px\"}}/>\n <h2>Covid19Vaccine Slots Tracker</h2>\n\n  \n\n  <CovidSlotDashboard  ></CovidSlotDashboard>\n\n  </main>\n  </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}